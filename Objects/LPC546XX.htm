<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\LPC546XX.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\LPC546XX.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Fri Nov 22 10:10:19 2019
<BR><P>
<H3>Maximum Stack Usage =       2456 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; my_adapt_threshold &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[b6]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[e]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">MemManage_Handler</a><BR>
 <LI><a href="#[f]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">BusFault_Handler</a><BR>
 <LI><a href="#[10]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">UsageFault_Handler</a><BR>
 <LI><a href="#[11]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">SVC_Handler</a><BR>
 <LI><a href="#[12]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">DebugMon_Handler</a><BR>
 <LI><a href="#[13]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">PendSV_Handler</a><BR>
 <LI><a href="#[14]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">SysTick_Handler</a><BR>
 <LI><a href="#[66]">ADC0_SEQA_DriverIRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[66]">ADC0_SEQA_DriverIRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[66]">ADC0_SEQA_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[2b]">ADC0_SEQA_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[67]">ADC0_SEQB_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[2c]">ADC0_SEQB_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[68]">ADC0_THCMP_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[2d]">ADC0_THCMP_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[f]">BusFault_Handler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[7b]">CAN0_IRQ0_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[40]">CAN0_IRQ0_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[7c]">CAN0_IRQ1_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[41]">CAN0_IRQ1_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[7d]">CAN1_IRQ0_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[42]">CAN1_IRQ0_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[7e]">CAN1_IRQ1_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[43]">CAN1_IRQ1_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[5a]">CTIMER0_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[1f]">CTIMER0_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[5b]">CTIMER1_DriverIRQHandler</a> from lpc546xx_ctimer.o(i.CTIMER1_DriverIRQHandler) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[20]">CTIMER1_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[74]">CTIMER2_DriverIRQHandler</a> from lpc546xx_ctimer.o(i.CTIMER2_DriverIRQHandler) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[39]">CTIMER2_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[5d]">CTIMER3_DriverIRQHandler</a> from lpc546xx_ctimer.o(i.CTIMER3_DriverIRQHandler) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[22]">CTIMER3_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[75]">CTIMER4_DriverIRQHandler</a> from lpc546xx_ctimer.o(i.CTIMER4_DriverIRQHandler) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[3a]">CTIMER4_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[51]">DMA0_DriverIRQHandler</a> from isr.o(i.DMA0_DriverIRQHandler) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[16]">DMA0_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[69]">DMIC0_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[2e]">DMIC0_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[12]">DebugMon_Handler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[84]">EEPROM_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[49]">EEPROM_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[81]">ETHERNET_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[46]">ETHERNET_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[83]">ETHERNET_MACLP_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[48]">ETHERNET_MACLP_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[82]">ETHERNET_PMT_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[47]">ETHERNET_PMT_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[5e]">FLEXCOMM0_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[23]">FLEXCOMM0_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[5f]">FLEXCOMM1_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[24]">FLEXCOMM1_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[60]">FLEXCOMM2_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[25]">FLEXCOMM2_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[61]">FLEXCOMM3_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[26]">FLEXCOMM3_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[62]">FLEXCOMM4_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[27]">FLEXCOMM4_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[63]">FLEXCOMM5_DriverIRQHandler</a> from isr.o(i.FLEXCOMM5_DriverIRQHandler) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[28]">FLEXCOMM5_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[64]">FLEXCOMM6_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[29]">FLEXCOMM6_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[65]">FLEXCOMM7_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[2a]">FLEXCOMM7_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[78]">FLEXCOMM8_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[3d]">FLEXCOMM8_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[79]">FLEXCOMM9_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[3e]">FLEXCOMM9_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[52]">GINT0_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[17]">GINT0_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[53]">GINT1_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[18]">GINT1_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[6a]">HWVAD0_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[2f]">HWVAD0_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[d]">HardFault_Handler</a> from system_lpc54606.o(i.HardFault_Handler) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[85]">LCD_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[4a]">LCD_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[59]">MRT0_DriverIRQHandler</a> from isr.o(i.MRT0_DriverIRQHandler) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[1e]">MRT0_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[e]">MemManage_Handler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[c]">NMI_Handler</a> from system_lpc54606.o(i.NMI_Handler) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[54]">PIN_INT0_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[19]">PIN_INT0_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[55]">PIN_INT1_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[1a]">PIN_INT1_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[56]">PIN_INT2_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[1b]">PIN_INT2_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[57]">PIN_INT3_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[1c]">PIN_INT3_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[70]">PIN_INT4_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[35]">PIN_INT4_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[71]">PIN_INT5_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[36]">PIN_INT5_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[72]">PIN_INT6_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[37]">PIN_INT6_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[73]">PIN_INT7_DriverIRQHandler</a> from isr.o(i.PIN_INT7_DriverIRQHandler) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[38]">PIN_INT7_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[13]">PendSV_Handler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[76]">RIT_DriverIRQHandler</a> from lpc546xx_adc.o(i.RIT_DriverIRQHandler) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[3b]">RIT_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[6d]">RTC_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[32]">RTC_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[6e]">Reserved46_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[33]">Reserved46_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[6f]">Reserved47_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[34]">Reserved47_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[b]">Reset_Handler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[5c]">SCT0_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[21]">SCT0_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[7a]">SDIO_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[3f]">SDIO_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[86]">SHA_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[4b]">SHA_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[87]">SMARTCARD0_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[4c]">SMARTCARD0_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[88]">SMARTCARD1_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[4d]">SMARTCARD1_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[77]">SPIFI0_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[3c]">SPIFI0_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[11]">SVC_Handler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[14]">SysTick_Handler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[4e]">SystemInit</a> from system_lpc54606.o(i.SystemInit) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[6c]">USB0_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[31]">USB0_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[6b]">USB0_NEEDCLK_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[30]">USB0_NEEDCLK_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[7f]">USB1_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[44]">USB1_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[80]">USB1_NEEDCLK_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[45]">USB1_NEEDCLK_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[58]">UTICK0_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[1d]">UTICK0_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[10]">UsageFault_Handler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[50]">WDT_BOD_DriverIRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[15]">WDT_BOD_IRQHandler</a> from startup_lpc54606.o(.text) referenced from startup_lpc54606.o(RESET)
 <LI><a href="#[8b]">__main</a> from __main.o(!!!main) referenced from startup_lpc54606.o(.text)
 <LI><a href="#[8a]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[89]">_sputc</a> from _sputc.o(.text) referenced from __2sprintf.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[8b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[8c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[8e]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[14f]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[150]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[151]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[152]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[153]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[8f]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[a8]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[154]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[9a]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[91]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[155]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[93]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[156]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[157]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[158]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[159]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[15a]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[15b]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[95]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[15c]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[15d]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[15e]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[15f]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[160]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[161]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[162]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[163]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[164]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[165]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[166]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[167]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[168]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[9f]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[169]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[16a]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[16b]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[16c]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[16d]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[16e]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[16f]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[8d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[170]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[97]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[99]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[171]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[9b]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 2456 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; my_adapt_threshold &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[172]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[b7]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[9e]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[173]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[a0]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[b]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>WDT_BOD_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>GINT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>GINT1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>PIN_INT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>PIN_INT1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>PIN_INT2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PIN_INT3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>UTICK0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>MRT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CTIMER0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CTIMER1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SCT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CTIMER3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>FLEXCOMM0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>FLEXCOMM1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>FLEXCOMM2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>FLEXCOMM3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>FLEXCOMM4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>FLEXCOMM5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>FLEXCOMM6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>FLEXCOMM7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>ADC0_SEQA_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>ADC0_SEQB_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>ADC0_THCMP_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>DMIC0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>HWVAD0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USB0_NEEDCLK_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USB0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>RTC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>Reserved46_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>Reserved47_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>PIN_INT4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>PIN_INT5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>PIN_INT6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>PIN_INT7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>CTIMER2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>CTIMER4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>RIT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SPIFI0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>FLEXCOMM8_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>FLEXCOMM9_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>SDIO_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>CAN0_IRQ0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>CAN0_IRQ1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>CAN1_IRQ0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>CAN1_IRQ1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>USB1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>USB1_NEEDCLK_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>ETHERNET_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ETHERNET_PMT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ETHERNET_MACLP_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>EEPROM_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>LCD_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>SHA_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>SMARTCARD0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SMARTCARD1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>ADC0_SEQA_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_SEQA_DriverIRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_SEQA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[67]"></a>ADC0_SEQB_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[68]"></a>ADC0_THCMP_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[7b]"></a>CAN0_IRQ0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[7c]"></a>CAN0_IRQ1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[7d]"></a>CAN1_IRQ0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[7e]"></a>CAN1_IRQ1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[5a]"></a>CTIMER0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[69]"></a>DMIC0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[84]"></a>EEPROM_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[81]"></a>ETHERNET_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[83]"></a>ETHERNET_MACLP_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[82]"></a>ETHERNET_PMT_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[5e]"></a>FLEXCOMM0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[5f]"></a>FLEXCOMM1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[60]"></a>FLEXCOMM2_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[61]"></a>FLEXCOMM3_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[62]"></a>FLEXCOMM4_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[64]"></a>FLEXCOMM6_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[65]"></a>FLEXCOMM7_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[78]"></a>FLEXCOMM8_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[79]"></a>FLEXCOMM9_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[52]"></a>GINT0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>GINT1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[6a]"></a>HWVAD0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[85]"></a>LCD_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[54]"></a>PIN_INT0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>PIN_INT1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[56]"></a>PIN_INT2_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[57]"></a>PIN_INT3_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[70]"></a>PIN_INT4_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[71]"></a>PIN_INT5_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[72]"></a>PIN_INT6_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[6d]"></a>RTC_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[6e]"></a>Reserved46_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[6f]"></a>Reserved47_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[5c]"></a>SCT0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[7a]"></a>SDIO_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[86]"></a>SHA_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[87]"></a>SMARTCARD0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[88]"></a>SMARTCARD1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[77]"></a>SPIFI0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[6c]"></a>USB0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[6b]"></a>USB0_NEEDCLK_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[7f]"></a>USB1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[80]"></a>USB1_NEEDCLK_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[58]"></a>UTICK0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[50]"></a>WDT_BOD_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54606.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[b6]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc54606.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[114]"></a>__aeabi_ldivmod</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_pwm_init
</UL>

<P><STRONG><a name="[a2]"></a>_ll_sdiv</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, llsdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[a4]"></a>__2sprintf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, __2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_printf_float
</UL>

<P><STRONG><a name="[a6]"></a>__printf</STRONG> (Thumb, 308 bytes, Stack size 40 bytes, __printf_flags_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[f0]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Send
</UL>

<P><STRONG><a name="[174]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[175]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[176]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[177]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[8]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[7]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
</UL>

<P><STRONG><a name="[178]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[ab]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[179]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[a5]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[89]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __2sprintf.o(.text)
</UL>
<P><STRONG><a name="[94]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[17a]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[17b]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b4]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_fp_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[ad]"></a>_btod_etento</STRONG> (Thumb, 216 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[17c]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[17d]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[9d]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[139]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[17e]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[17f]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[180]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[ae]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b9]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[b8]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[ba]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[bb]"></a>_e2e</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[af]"></a>_btod_ediv</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[b0]"></a>_btod_emul</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[bc]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[bd]"></a>BM_get</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, selfbuild_control.o(i.BM_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BM_get
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Oledshow
</UL>

<P><STRONG><a name="[c0]"></a>Button_get</STRONG> (Thumb, 354 bytes, Stack size 8 bytes, selfbuild_control.o(i.Button_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Button_get &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Oledshow
</UL>

<P><STRONG><a name="[5b]"></a>CTIMER1_DriverIRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lpc546xx_ctimer.o(i.CTIMER1_DriverIRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[74]"></a>CTIMER2_DriverIRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lpc546xx_ctimer.o(i.CTIMER2_DriverIRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[5d]"></a>CTIMER3_DriverIRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lpc546xx_ctimer.o(i.CTIMER3_DriverIRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[75]"></a>CTIMER4_DriverIRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lpc546xx_ctimer.o(i.CTIMER4_DriverIRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[c2]"></a>Correct_Sensor</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, selfbuild_correct_sensor.o(i.Correct_Sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Correct_Sensor &rArr; Normalized_MCP41 &rArr; OLED_P6x8Int &rArr; oled_p6x8str &rArr; oled_set_pos &rArr; oled_wrcmd &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCP41_Init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normalized_MCP41
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_InitMCP41
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>DMA0_DriverIRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, isr.o(i.DMA0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA0_DriverIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v032_dma
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[c5]"></a>EEPROM_InitMCP41</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, selfbuild_correct_sensor.o(i.EEPROM_InitMCP41))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EEPROM_InitMCP41 &rArr; MCP41_SetCmd &rArr; SPI_WriteCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCP41_SetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Correct_Sensor
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normalized_MCP41
</UL>

<P><STRONG><a name="[63]"></a>FLEXCOMM5_DriverIRQHandler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, isr.o(i.FLEXCOMM5_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLEXCOMM5_DriverIRQHandler &rArr; mt9v032_cof_uart_interrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v032_cof_uart_interrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[125]"></a>GrayscaleToBinary</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, seekfree_mt9v032.o(i.GrayscaleToBinary))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GrayscaleToBinary
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_lpc54606.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[c3]"></a>MCP41_Init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, selfbuild_mcp41.o(i.MCP41_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MCP41_Init &rArr; gpio_init &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Correct_Sensor
</UL>

<P><STRONG><a name="[c8]"></a>MCP41_SetCmd</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, selfbuild_mcp41.o(i.MCP41_SetCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MCP41_SetCmd &rArr; SPI_WriteCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCP41_SetValue
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_InitMCP41
</UL>

<P><STRONG><a name="[cc]"></a>MCP41_SetValue</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, selfbuild_mcp41.o(i.MCP41_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MCP41_SetValue &rArr; MCP41_SetCmd &rArr; SPI_WriteCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_convert
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCP41_SetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normalized_MCP41
</UL>

<P><STRONG><a name="[59]"></a>MRT0_DriverIRQHandler</STRONG> (Thumb, 236 bytes, Stack size 8 bytes, isr.o(i.MRT0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MRT0_DriverIRQHandler &rArr; PWM_OUT &rArr; sct_pwm_duty
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_read
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_OUT
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Incremental
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[12d]"></a>M_divider</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, lpc546xx_pll.o(i.M_divider))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = M_divider
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll_init
</UL>

<P><STRONG><a name="[d5]"></a>Menu_Init</STRONG> (Thumb, 772 bytes, Stack size 24 bytes, selfbuild_oledmenu.o(i.Menu_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Menu_Init &rArr; Menu_HomePage_Show &rArr; oled_p6x8str &rArr; oled_set_pos &rArr; oled_wrcmd &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_eeprom_write_word
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HomePage_Show
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Data_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dc]"></a>Menu_Work</STRONG> (Thumb, 3038 bytes, Stack size 40 bytes, selfbuild_oledmenu.o(i.Menu_Work))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = Menu_Work &rArr; Menu_SubPage_Show &rArr; oled_printf_float &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_eeprom_write_word
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_printf_float
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_p6x8str
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_fill
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Int
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SubPage_Show
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HomePage_Show
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Get
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_lpc54606.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(RESET)
</UL>
<P><STRONG><a name="[12e]"></a>N_divider</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, lpc546xx_pll.o(i.N_divider))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = N_divider
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll_init
</UL>

<P><STRONG><a name="[c6]"></a>Normalized_MCP41</STRONG> (Thumb, 696 bytes, Stack size 40 bytes, selfbuild_correct_sensor.o(i.Normalized_MCP41))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Normalized_MCP41 &rArr; OLED_P6x8Int &rArr; oled_p6x8str &rArr; oled_set_pos &rArr; oled_wrcmd &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_eeprom_write_word
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_convert
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_p6x8str
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_fill
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Int
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCP41_SetValue
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_InitMCP41
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Correct_Sensor
</UL>

<P><STRONG><a name="[d9]"></a>OLED_P6x8Int</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, seekfree_oled.o(i.OLED_P6x8Int))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = OLED_P6x8Int &rArr; oled_p6x8str &rArr; oled_set_pos &rArr; oled_wrcmd &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_p6x8str
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcshow
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Oled_showGPRO
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Oledshow
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Work
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SubPage_Show
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normalized_MCP41
</UL>

<P><STRONG><a name="[e3]"></a>OLED_PrintBinary</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, seekfree_oled.o(i.OLED_PrintBinary))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OLED_PrintBinary &rArr; oled_set_pos &rArr; oled_wrcmd &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wrdat
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Oledshow
</UL>

<P><STRONG><a name="[e6]"></a>Oled_showGPRO</STRONG> (Thumb, 298 bytes, Stack size 16 bytes, selfbuild_control.o(i.Oled_showGPRO))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = Oled_showGPRO &rArr; oled_printf_float &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_printf_float
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_p6x8str
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Int
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Oledshow
</UL>

<P><STRONG><a name="[e7]"></a>Oledshow</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, selfbuild_control.o(i.Oledshow))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = Oledshow &rArr; Oled_showGPRO &rArr; oled_printf_float &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_p6x8str
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_fill
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_PrintBinary
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Int
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcshow
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Oled_showGPRO
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_get
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BM_get
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d0]"></a>PID_Incremental</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, selfbuild_pid.o(i.PID_Incremental))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MRT0_DriverIRQHandler
</UL>

<P><STRONG><a name="[73]"></a>PIN_INT7_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, isr.o(i.PIN_INT7_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PIN_INT7_DriverIRQHandler &rArr; mt9v032_vsync &rArr; dma_reload_linked
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v032_vsync
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[d1]"></a>PWM_OUT</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, selfbuild_control.o(i.PWM_OUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = PWM_OUT &rArr; sct_pwm_duty
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sct_pwm_duty
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MRT0_DriverIRQHandler
</UL>

<P><STRONG><a name="[12c]"></a>P_divider</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, lpc546xx_pll.o(i.P_divider))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = P_divider
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll_init
</UL>

<P><STRONG><a name="[76]"></a>RIT_DriverIRQHandler</STRONG> (Thumb, 88 bytes, Stack size 4 bytes, lpc546xx_adc.o(i.RIT_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RIT_DriverIRQHandler &rArr; adc_get_once
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_once
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[126]"></a>ScanLine</STRONG> (Thumb, 864 bytes, Stack size 40 bytes, imageprocess.o(i.ScanLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ScanLine
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cf]"></a>Speed_read</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, selfbuild_control.o(i.Speed_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Speed_read &rArr; ctimer_count_clean
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_count_read
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_count_clean
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MRT0_DriverIRQHandler
</UL>

<P><STRONG><a name="[4e]"></a>SystemInit</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, system_lpc54606.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit &rArr; pll_init &rArr; write_syspllctrl
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54606.o(.text)
</UL>
<P><STRONG><a name="[ef]"></a>UI_Send</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, selfbuild_control.o(i.UI_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = UI_Send &rArr; vcan_sendware &rArr; uart_putbuff
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcan_sendware
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b3]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[f2]"></a>__hardfp_pow</STRONG> (Thumb, 3072 bytes, Stack size 192 bytes, pow.o(i.__hardfp_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_adapt_threshold
</UL>

<P><STRONG><a name="[fe]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[f4]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[f3]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[f9]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[f6]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_overflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[fa]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[a7]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[ce]"></a>adc_convert</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, lpc546xx_adc.o(i.adc_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCP41_SetValue
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normalized_MCP41
</UL>

<P><STRONG><a name="[eb]"></a>adc_get_once</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, lpc546xx_adc.o(i.adc_get_once))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_get_once
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_DriverIRQHandler
</UL>

<P><STRONG><a name="[ca]"></a>adc_init</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, lpc546xx_adc.o(i.adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = adc_init &rArr; adc_mux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_mux
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCP41_Init
</UL>

<P><STRONG><a name="[102]"></a>adc_mux</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, lpc546xx_adc.o(i.adc_mux))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = adc_mux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iocon_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[e8]"></a>adcshow</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, selfbuild_control.o(i.adcshow))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = adcshow &rArr; OLED_P6x8Int &rArr; oled_p6x8str &rArr; oled_set_pos &rArr; oled_wrcmd &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_p6x8str
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Int
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Oledshow
</UL>

<P><STRONG><a name="[104]"></a>camera_init</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, seekfree_mt9v032.o(i.camera_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = camera_init &rArr; uart_init &rArr; uart_mux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dam_init_linked
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_irq
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sct_start
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sct_camera_dma
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pint_init
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_config
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[110]"></a>ctimer_clock</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, lpc546xx_ctimer.o(i.ctimer_clock))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_pwm_init
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_count_init
</UL>

<P><STRONG><a name="[ed]"></a>ctimer_count_clean</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lpc546xx_ctimer.o(i.ctimer_count_clean))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ctimer_count_clean
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_read
</UL>

<P><STRONG><a name="[10f]"></a>ctimer_count_init</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, lpc546xx_ctimer.o(i.ctimer_count_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ctimer_count_init &rArr; ctimer_countmux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_countmux
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_clock
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ec]"></a>ctimer_count_read</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpc546xx_ctimer.o(i.ctimer_count_read))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_read
</UL>

<P><STRONG><a name="[111]"></a>ctimer_countmux</STRONG> (Thumb, 398 bytes, Stack size 8 bytes, lpc546xx_ctimer.o(i.ctimer_countmux))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ctimer_countmux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iocon_init
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_count_init
</UL>

<P><STRONG><a name="[112]"></a>ctimer_pwm_init</STRONG> (Thumb, 378 bytes, Stack size 40 bytes, lpc546xx_ctimer.o(i.ctimer_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ctimer_pwm_init &rArr; ctimer_pwmmux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_pwmmux
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_clock
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[113]"></a>ctimer_pwmmux</STRONG> (Thumb, 494 bytes, Stack size 8 bytes, lpc546xx_ctimer.o(i.ctimer_pwmmux))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ctimer_pwmmux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iocon_init
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_pwm_init
</UL>

<P><STRONG><a name="[10a]"></a>dam_init_linked</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, lpc546xx_dma.o(i.dam_init_linked))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = dam_init_linked &rArr; gpio_init &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[121]"></a>eeprom_init</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, lpc546xx_eeprom.o(i.eeprom_init))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f8]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[132]"></a>flexcomm_clk_enable</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, lpc546xx_flexcomm.o(i.flexcomm_clk_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flexcomm_clk_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_mux
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[134]"></a>flexcomm_get_clk</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lpc546xx_flexcomm.o(i.flexcomm_get_clk))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[11b]"></a>flexcomm_irq</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lpc546xx_flexcomm.o(i.flexcomm_irq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flexcomm_irq
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_irq
</UL>

<P><STRONG><a name="[11e]"></a>get_clk</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, lpc546xx_pll.o(i.get_clk))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = get_clk &rArr; findPllPreDiv &rArr; pllDecodeN
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findPllPreDiv
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findPllPostDiv
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findPllMMult
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[108]"></a>get_config</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, seekfree_mt9v032.o(i.get_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = get_config &rArr; uart_putbuff
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[be]"></a>gpio_get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc546xx_gpio.o(i.gpio_get))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_get
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BM_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Work
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_read
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Get
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normalized_MCP41
</UL>

<P><STRONG><a name="[c4]"></a>gpio_init</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, lpc546xx_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = gpio_init &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iocon_init
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dam_init_linked
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pint_init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Correct_Sensor
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCP41_Init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_PinInit
</UL>

<P><STRONG><a name="[c1]"></a>gpio_set</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lpc546xx_gpio.o(i.gpio_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_get
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteCmd
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCP41_SetCmd
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wrdat
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wrcmd
</UL>

<P><STRONG><a name="[103]"></a>iocon_init</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, lpc546xx_iocon.o(i.iocon_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = iocon_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_pwmmux
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_countmux
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_mux
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_mux
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mux
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sct_pwm_mux
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sct_input_mux
</UL>

<P><STRONG><a name="[9c]"></a>main</STRONG> (Thumb, 350 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 2456 + Unknown Stack Size
<LI>Call Chain = main &rArr; my_adapt_threshold &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_pwm_init
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_count_init
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sct_pwm_init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sct_pwm_duty
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_clk
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_adapt_threshold
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Send
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanLine
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Oledshow
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Work
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayscaleToBinary
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Correct_Sensor
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrt_pit_init
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[122]"></a>mrt_pit_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lpc546xx_mrt.o(i.mrt_pit_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mrt_pit_init
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c9]"></a>mt9v032_cof_uart_interrupt</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, seekfree_mt9v032.o(i.mt9v032_cof_uart_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mt9v032_cof_uart_interrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_query
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM5_DriverIRQHandler
</UL>

<P><STRONG><a name="[c7]"></a>mt9v032_dma</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, seekfree_mt9v032.o(i.mt9v032_dma))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_DriverIRQHandler
</UL>

<P><STRONG><a name="[e9]"></a>mt9v032_vsync</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, seekfree_mt9v032.o(i.mt9v032_vsync))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mt9v032_vsync &rArr; dma_reload_linked
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_reload_linked
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT7_DriverIRQHandler
</UL>

<P><STRONG><a name="[124]"></a>my_adapt_threshold</STRONG> (Thumb, 572 bytes, Stack size 2192 bytes, seekfree_mt9v032.o(i.my_adapt_threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 2456<LI>Call Chain = my_adapt_threshold &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7]"></a>my_eeprom_write_word</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, lpc546xx_eeprom.o(i.my_eeprom_write_word))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = my_eeprom_write_word
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Work
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normalized_MCP41
</UL>

<P><STRONG><a name="[137]"></a>myabs</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, seekfree_fun.o(i.myabs))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[d3]"></a>oled_fill</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, seekfree_oled.o(i.oled_fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = oled_fill &rArr; oled_wrdat &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wrdat
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wrcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Oledshow
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Work
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SubPage_Show
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HomePage_Show
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normalized_MCP41
</UL>

<P><STRONG><a name="[11f]"></a>oled_init</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, seekfree_oled.o(i.oled_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = oled_init &rArr; spi_init &rArr; spi_mux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_fill
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wrcmd
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_pos
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_PinInit
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d4]"></a>oled_p6x8str</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, seekfree_oled.o(i.oled_p6x8str))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = oled_p6x8str &rArr; oled_set_pos &rArr; oled_wrcmd &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wrdat
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_printf_float
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Int
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcshow
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Oled_showGPRO
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Oledshow
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Work
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SubPage_Show
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HomePage_Show
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normalized_MCP41
</UL>

<P><STRONG><a name="[db]"></a>oled_printf_float</STRONG> (Thumb, 206 bytes, Stack size 80 bytes, seekfree_oled.o(i.oled_printf_float))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = oled_printf_float &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_p6x8str
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Oled_showGPRO
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Work
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SubPage_Show
</UL>

<P><STRONG><a name="[e4]"></a>oled_set_pos</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, seekfree_oled.o(i.oled_set_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = oled_set_pos &rArr; oled_wrcmd &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wrcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_p6x8str
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_PrintBinary
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
</UL>

<P><STRONG><a name="[129]"></a>oled_wrcmd</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, seekfree_oled.o(i.oled_wrcmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = oled_wrcmd &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_fill
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_pos
</UL>

<P><STRONG><a name="[e5]"></a>oled_wrdat</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, seekfree_oled.o(i.oled_wrdat))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = oled_wrdat &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_p6x8str
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_fill
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_PrintBinary
</UL>

<P><STRONG><a name="[10b]"></a>pint_init</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, lpc546xx_pint.o(i.pint_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = pint_init &rArr; gpio_init &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[ee]"></a>pll_init</STRONG> (Thumb, 112 bytes, Stack size 4 bytes, lpc546xx_pll.o(i.pll_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pll_init &rArr; write_syspllctrl
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_syspllctrl
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;P_divider
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N_divider
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M_divider
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[109]"></a>sct_camera_dma</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, lpc546xx_sct.o(i.sct_camera_dma))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = sct_camera_dma &rArr; sct_input_mux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sct_input_mux
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[130]"></a>sct_input_mux</STRONG> (Thumb, 458 bytes, Stack size 16 bytes, lpc546xx_sct.o(i.sct_input_mux))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = sct_input_mux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iocon_init
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sct_camera_dma
</UL>

<P><STRONG><a name="[ea]"></a>sct_pwm_duty</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, lpc546xx_sct.o(i.sct_pwm_duty))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = sct_pwm_duty
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_OUT
</UL>

<P><STRONG><a name="[120]"></a>sct_pwm_init</STRONG> (Thumb, 372 bytes, Stack size 56 bytes, lpc546xx_sct.o(i.sct_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = sct_pwm_init &rArr; sct_pwm_mux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sct_pwm_mux
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[131]"></a>sct_pwm_mux</STRONG> (Thumb, 458 bytes, Stack size 16 bytes, lpc546xx_sct.o(i.sct_pwm_mux))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = sct_pwm_mux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iocon_init
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sct_pwm_init
</UL>

<P><STRONG><a name="[10e]"></a>sct_start</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc546xx_sct.o(i.sct_start))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[12a]"></a>spi_init</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, lpc546xx_spi.o(i.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = spi_init &rArr; spi_mux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flexcomm_get_clk
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flexcomm_clk_enable
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mux
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
</UL>

<P><STRONG><a name="[12b]"></a>spi_mosi</STRONG> (Thumb, 302 bytes, Stack size 24 bytes, lpc546xx_spi.o(i.spi_mosi))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wrdat
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wrcmd
</UL>

<P><STRONG><a name="[133]"></a>spi_mux</STRONG> (Thumb, 1278 bytes, Stack size 24 bytes, lpc546xx_spi.o(i.spi_mux))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = spi_mux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iocon_init
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[f7]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[101]"></a>systick_delay</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lpc546xx_systick.o(i.systick_delay))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
</UL>

<P><STRONG><a name="[cd]"></a>systick_delay_ms</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, lpc546xx_systick.o(i.systick_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = systick_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCP41_SetValue
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normalized_MCP41
</UL>

<P><STRONG><a name="[105]"></a>uart_init</STRONG> (Thumb, 268 bytes, Stack size 64 bytes, lpc546xx_uart.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = uart_init &rArr; uart_mux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flexcomm_get_clk
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myabs
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_mux
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[136]"></a>uart_mux</STRONG> (Thumb, 552 bytes, Stack size 16 bytes, lpc546xx_uart.o(i.uart_mux))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = uart_mux &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flexcomm_clk_enable
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iocon_init
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[107]"></a>uart_putbuff</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, lpc546xx_uart.o(i.uart_putbuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uart_putbuff
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcan_sendware
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_config
</UL>

<P><STRONG><a name="[138]"></a>uart_putchar</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lpc546xx_uart.o(i.uart_putchar))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
</UL>

<P><STRONG><a name="[127]"></a>uart_query</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lpc546xx_uart.o(i.uart_query))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v032_cof_uart_interrupt
</UL>

<P><STRONG><a name="[106]"></a>uart_rx_irq</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, lpc546xx_uart.o(i.uart_rx_irq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart_rx_irq &rArr; flexcomm_irq
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flexcomm_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[f1]"></a>vcan_sendware</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, vcan_computer.o(i.vcan_sendware))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = vcan_sendware &rArr; uart_putbuff
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Send
</UL>

<P><STRONG><a name="[12f]"></a>write_syspllctrl</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, lpc546xx_pll.o(i.write_syspllctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = write_syspllctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll_init
</UL>

<P><STRONG><a name="[96]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[f5]"></a>__aeabi_dneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[181]"></a>_dneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[182]"></a>__aeabi_fneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[183]"></a>_fneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[184]"></a>_dabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[185]"></a>_fabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[df]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_adapt_threshold
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Work
</UL>

<P><STRONG><a name="[13a]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[fd]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_adapt_threshold
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
</UL>

<P><STRONG><a name="[13d]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[140]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[145]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[de]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Work
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
</UL>

<P><STRONG><a name="[142]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[e1]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normalized_MCP41
</UL>

<P><STRONG><a name="[143]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[dd]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Work
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normalized_MCP41
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[186]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[187]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[144]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[148]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[e0]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_adapt_threshold
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normalized_MCP41
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
</UL>

<P><STRONG><a name="[146]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[13c]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[13f]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[ff]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_printf_float
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[147]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[fc]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[149]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[135]"></a>_dsqrt</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, dsqrt_umaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[fb]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[14b]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[da]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Oled_showGPRO
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_adapt_threshold
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Work
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SubPage_Show
</UL>

<P><STRONG><a name="[14c]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[14d]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[92]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[188]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[189]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[13b]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[90]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[141]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[100]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[14e]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[11d]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc546xx_flexcomm.o(i.NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flexcomm_irq
</UL>

<P><STRONG><a name="[11c]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpc546xx_flexcomm.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flexcomm_irq
</UL>

<P><STRONG><a name="[115]"></a>findPllMMult</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lpc546xx_pll.o(i.findPllMMult))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = findPllMMult &rArr; pllDecodeM
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pllDecodeM
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_clk
</UL>

<P><STRONG><a name="[117]"></a>findPllPostDiv</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lpc546xx_pll.o(i.findPllPostDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = findPllPostDiv &rArr; pllDecodeP
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pllDecodeP
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_clk
</UL>

<P><STRONG><a name="[119]"></a>findPllPreDiv</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lpc546xx_pll.o(i.findPllPreDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = findPllPreDiv &rArr; pllDecodeN
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pllDecodeN
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_clk
</UL>

<P><STRONG><a name="[116]"></a>pllDecodeM</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, lpc546xx_pll.o(i.pllDecodeM))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pllDecodeM
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findPllMMult
</UL>

<P><STRONG><a name="[11a]"></a>pllDecodeN</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, lpc546xx_pll.o(i.pllDecodeN))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pllDecodeN
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findPllPreDiv
</UL>

<P><STRONG><a name="[118]"></a>pllDecodeP</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, lpc546xx_pll.o(i.pllDecodeP))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pllDecodeP
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findPllPostDiv
</UL>

<P><STRONG><a name="[123]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cb]"></a>SPI_WriteCmd</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, selfbuild_mcp41.o(i.SPI_WriteCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_WriteCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCP41_SetCmd
</UL>

<P><STRONG><a name="[bf]"></a>Button_Get</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, selfbuild_oledmenu.o(i.Button_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Button_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Work
</UL>

<P><STRONG><a name="[d6]"></a>Menu_Data_Init</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, selfbuild_oledmenu.o(i.Menu_Data_Init))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Init
</UL>

<P><STRONG><a name="[d2]"></a>Menu_HomePage_Show</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, selfbuild_oledmenu.o(i.Menu_HomePage_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Menu_HomePage_Show &rArr; oled_p6x8str &rArr; oled_set_pos &rArr; oled_wrcmd &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_p6x8str
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Work
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Init
</UL>

<P><STRONG><a name="[d8]"></a>Menu_SubPage_Show</STRONG> (Thumb, 324 bytes, Stack size 24 bytes, selfbuild_oledmenu.o(i.Menu_SubPage_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = Menu_SubPage_Show &rArr; oled_printf_float &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_printf_float
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_p6x8str
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_fill
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Int
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Work
</UL>

<P><STRONG><a name="[10d]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, seekfree_mt9v032.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[10c]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, seekfree_mt9v032.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[128]"></a>dma_reload_linked</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, seekfree_mt9v032.o(i.dma_reload_linked))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_reload_linked
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v032_vsync
</UL>

<P><STRONG><a name="[e2]"></a>OLED_PinInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, seekfree_oled.o(i.OLED_PinInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = OLED_PinInit &rArr; gpio_init &rArr; iocon_init
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
</UL>

<P><STRONG><a name="[14a]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[13e]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[ac]"></a>_fp_digits</STRONG> (Thumb, 428 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[8a]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
